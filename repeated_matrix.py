def ohno(my_history, opponent_history):
    if len(my_history) < 100:
        return 0
    else:
        my_latest = sum(my_history[-10:])
        opponent_latest = sum(opponent_history[-10:])

        if opponent_latest >= 9:
            return 1
        elif my_latest >= 4 or opponent_latest <= 3:
            return 0
        else:
            return 1

    """
    100回までは常に協調，それ以降は直近10回の相手と自分の結果で分岐

    直近10回中……
    1. 相手が9回以上裏切ってたら問答無用で自分も裏切る
    2. 1でない場合に自分が4回以上裏切っていたら裏切りすぎと判断して協調する
    3. 相手の裏切りが3回以下なら相手を信用できると判断して協調する
    4. 上記以外の場合，とりあえず裏切っておく

    ねらいとしては以下．
    100回目まで協調させることで(協調，協調)のパターンに入れるといいなと思った
    1.でトリガー戦略など，こちらの出方に関わらず相手が裏切り続ける最悪のパターンでの損切り
    2.で相手の出方を逐次見て判断する戦略から嫌われないようにしようとした（1に入ってから何らかの理由で相手が協調に戻った，ぐらいしか発動条件が思いつきませんが）
    3.では相手が協調路線にある時にうまく乗れるとよいと考えた
    4.は判断できなくなったので思考放棄して目先の利益を追う，みたいな感じ
    100回という数字は期待値の10000回から見てごく小さく，相手に自分の協調路線を伝えることができるぐらいには大きい数かなと考えた
    1~3の基準にしている直近10回中の回数に特に根拠はないです
    """
